{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","prevProps","prevState","console","info","toUTCString","slice","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","clockName","hasClock","setNewName","showClock","hideClock","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAO,IAAIC,KAEjB,EAAKK,SAAS,CAAEN,WACf,OAZP,gCAeE,SAAmBO,EAAkBC,GAC/BA,EAAUR,OAASG,KAAKJ,MAAMC,MAEhCS,QAAQC,KAAKP,KAAKJ,MAAMC,KAAKW,cAAcC,OAAO,IAAK,IAGrDL,EAAUM,OAASV,KAAKW,MAAMD,MAEhCJ,QAAQM,MAAR,uBAA8BR,EAAUM,KAAxC,eAAmDV,KAAKW,MAAMD,SAvBpE,kCA2BE,WACET,OAAOY,cAAcb,KAAKD,WA5B9B,oBA+BE,WACE,IAAQW,EAASV,KAAKW,MAAdD,KACAb,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGjB,EAAKW,cAAcC,OAAO,IAAK,YA5C1C,GAA2BM,aCN3B,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAQX,IAAMG,EAAb,4MACExB,MAAQ,CACNyB,UAAW,UACXC,UAAU,GAHd,EAMEvB,QAAU,EANZ,EAoBEwB,WAAa,WACX,EAAKpB,SAAS,CAAEkB,UAAWL,OArB/B,EAwBEQ,UAAY,WACV,EAAKrB,SAAS,CAAEmB,UAAU,KAzB9B,EA4BEG,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKxB,SAAS,CAAEmB,UAAU,KA9B9B,uDAQE,WACEM,SAASC,iBAAiB,cAAe7B,KAAKyB,WAC9CG,SAASC,iBAAiB,QAAS7B,KAAKwB,WACxCxB,KAAKD,QAAUE,OAAOC,YAAYF,KAAKuB,WAAY,QAXvD,kCAcE,WACEK,SAASE,oBAAoB,cAAe9B,KAAKyB,WACjDG,SAASE,oBAAoB,QAAS9B,KAAKwB,WAC3CvB,OAAOY,cAAcb,KAAKD,WAjB9B,oBAiCE,WACE,MAAgCC,KAAKJ,MAA7ByB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCQ,GACC,cAAC,EAAD,CAAOZ,KAAMW,WAxCvB,GAAyBN,aCZzBgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.c73aaec3.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const date = new Date();\n\n      this.setState({ date });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevState.date !== this.state.date) {\n      // eslint-disable-next-line no-console\n      console.info(this.state.date.toUTCString().slice(-12, -4));\n    }\n\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n    this.timerId = window.setInterval(this.setNewName, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n    window.clearInterval(this.timerId);\n  }\n\n  setNewName = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  hideClock = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && (\n          <Clock name={clockName} />)}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}